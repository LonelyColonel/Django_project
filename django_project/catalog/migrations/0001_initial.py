# Generated by Django 3.2.16 on 2022-11-12 20:48

import catalog.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='max 150 символов', max_length=150, verbose_name='название')),
                ('is_published', models.BooleanField(default=True, verbose_name='опубликовано')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
                ('weight', models.PositiveSmallIntegerField(default=100, verbose_name='вес')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='max 150 символов', max_length=150, verbose_name='название')),
                ('is_published', models.BooleanField(default=True, verbose_name='опубликовано')),
                ('text', tinymce.models.HTMLField(help_text='Опишите объект. В описании обязательно должны быть слова: роскошно, или превосходно, или amazing, или wonderful', validators=[catalog.validators.validate_amazing], verbose_name='текст')),
                ('upload', models.ImageField(default='', upload_to='upload/%Y/%m', verbose_name='изображение')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_category', to='catalog.category', verbose_name='категории')),
            ],
            options={
                'verbose_name': 'товар',
                'verbose_name_plural': 'товары',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(help_text='max 150 символов', max_length=150, verbose_name='название')),
                ('is_published', models.BooleanField(default=True, verbose_name='опубликовано')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'тег',
                'verbose_name_plural': 'теги',
            },
        ),
        migrations.CreateModel(
            name='Preview',
            fields=[
                ('img', models.ImageField(help_text='Загрузите картинку', null=True, upload_to='preview/%Y/%m', verbose_name='Изображение')),
                ('item', models.OneToOneField(help_text='Выберите товар', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='catalog.item', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'изображение',
                'verbose_name_plural': 'изображения',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='tags',
            field=models.ManyToManyField(to='catalog.Tag', verbose_name='теги'),
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='uploads/', verbose_name='Изображение')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='catalog.item', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'изображение в галерее',
                'verbose_name_plural': 'изображения в галерее',
            },
        ),
    ]
